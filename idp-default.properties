# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

# Follow properites have their values assigned via 'overrides' environment variables of config server docker.
# DO NOT define these in any of the property files.  They must be passed as env variables.  Refer to config-server
# helm chart:
# db.dbuser.password
# keycloak.external.url
# keycloak.internal.host
# keycloak.internal.url
# keycloak.admin.password
# mosip.auth.client.secret   (convention: <realm>.<keycloak client name>.secret)
# mosip.ida.client.secret
# mosip.admin.client.secret
# mosip.reg.client.secret
# mosip.prereg.client.secret
# softhsm.kernel.pin
# softhsm-security-pin
# email.smtp.host
# email.smtp.username
# email.smtp.secret
# mosip.kernel.tokenid.uin.salt
# mosip.kernel.tokenid.partnercode.salt
# mosip.api.internal.url
# mosip.api.public.url

## IdP MISP License key
mosip.idp.misp.license.key=jj8n2cZww2dzZfszKgxyaOWOzq7hPx2snT52MPMA6k5Z5fZ2X3

# Secure endpoints with required authority
mosip.idp.security.auth.post-urls={'${server.servlet.path}/client-mgmt/**' : {'SCOPE_add_oidc_client'} , \
  \ '${server.servlet.path}/system-info/**' : { 'SCOPE_upload_certificate'} }
mosip.idp.security.auth.put-urls={'${server.servlet.path}/client-mgmt/**' : { 'SCOPE_update_oidc_client'} }
mosip.idp.security.auth.get-urls={'${server.servlet.path}/system-info/**' : { 'SCOPE_get_certificate'} }

# CSRF token check disabled endpoints
mosip.idp.security.ignore-csrf-urls=${server.servlet.path}/oidc/**,${server.servlet.path}/oauth/**,\
  ${server.servlet.path}/actuator/**,/favicon.ico,${server.servlet.path}/error,\
  ${server.servlet.path}/swagger-ui/**,${server.servlet.path}/v3/api-docs/**,\
  ${server.servlet.path}/system-info/**,${server.servlet.path}/linked-authorization/link-transaction,\
  ${server.servlet.path}/linked-authorization/authenticate,${server.servlet.path}/linked-authorization/consent


# Authentication ignored endpoint (permit-all)
mosip.idp.security.ignore-auth-urls=${server.servlet.path}/csrf/**,${server.servlet.path}/authorization/**,\
  ${server.servlet.path}/linked-authorization/**,${server.servlet.path}/oidc/**,${server.servlet.path}/oauth/**,\
  ${server.servlet.path}/actuator/**,/favicon.ico,${server.servlet.path}/error,${server.servlet.path}/swagger-ui/**,\
  ${server.servlet.path}/v3/api-docs/**

mosip.idp.amr-acr-mapping-file-url=${spring_config_url_env}/*/${active_profile_env}/${spring_config_label_env}/amr-acr-mapping.json

#spring.autoconfigure.exclude[0]=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${keycloak.external.url}/auth/realms/mosip
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${keycloak.external.url}/auth/realms/mosip/protocol/openid-connect/certs

mosip.idp.supported-id-regex=\\S*
mosip.idp.reqtime.leeway-minutes=2

#Id and access token validity intervals
mosip.idp.access-token-expire-seconds=7200
mosip.idp.id-token-expire-seconds=7200

## link transaction
mosip.idp.link-code-expire-in-secs=60
mosip.idp.kafka.linked-session.topic=idp-linked
mosip.idp.kafka.linked-auth-code.topic=idp-consented

## kafka configurations
spring.kafka.bootstrap-servers=kafka-0.kafka-headless.${kafka.profile}:${kafka.port},kafka-1.kafka-headless.${kafka.profile}:${kafka.port},kafka-2.kafka-headless.${kafka.profile}:${kafka.port}
spring.kafka.consumer.group-id=idp-consumer
spring.kafka.consumer.enable-auto-commit=true
#spring.kafka.listener.concurrency=1

mosip.idp.audit.wrapper.impl=LoggerAuditService

## ----------------------------------------  IdP (oauth & openid) config -------------------------------------------

## supported scopes
mosip.idp.supported.authorize.scopes={'identity.readonly','vid.manage','vid.readonly','auth.readonly','auth.method.manage','identity.update','auth.history.readonly','notifications.readonly','notifications.manage','credential.manage','auth.history.manage','card.manage'}
mosip.idp.supported.openid.scopes={'profile','email','phone'}
mosip.idp.openid.scope.claims={'profile' : {'name','address','gender','birthdate','picture','email','phone_number','locale','individual_id'},'email' : {'email'}, 'phone' : {'phone_number'}}

## supported authorization processing flow to be used, Currently only supports Authorization Code Flow.
mosip.idp.supported.response.types={'code'}

## Form of Authorization Grant presented to token endpoint
mosip.idp.supported.grant.types={'authorization_code'}

## specifies how the Authorization Server displays the authentication and consent user interface pages to the End-User
# page-The Authorization Server SHOULD display the authentication and consent UI consistent with a full User Agent page view. If the display parameter is not specified, this is the default display mode.
# popup-The Authorization Server SHOULD display the authentication and consent UI consistent with a popup User Agent window. The popup User Agent window should be of an appropriate size for a login-focused dialog and should not obscure the entire window that it is popping up over.
# touch-The Authorization Server SHOULD display the authentication and consent UI consistent with a device that leverages a touch interface.
# wap-The Authorization Server SHOULD display the authentication and consent UI consistent with a "feature phone" type display.
mosip.idp.supported.ui.displays={'page','popup','touch','wap'}

## specifies whether the Authorization Server prompts the End-User for reauthentication and consent
# none-The Authorization Server MUST NOT display any authentication or consent user interface pages.
# An error is returned if an End-User is not already authenticated or the Client does not have pre-configured consent
# for the requested Claims or does not fulfill other conditions for processing the request.
# The error code will typically be login_required, interaction_required, or another code defined in Section 3.1.2.6.
# This can be used as a method to check for existing authentication and/or consent.
# login-The Authorization Server SHOULD prompt the End-User for reauthentication. If it cannot reauthenticate the End-User, \
#  it MUST return an error, typically login_required.
# consent-The Authorization Server SHOULD prompt the End-User for consent before returning information to the Client.
# If it cannot obtain consent, it MUST return an error, typically consent_required.
# select_account-The Authorization Server SHOULD prompt the End-User to select a user account. This enables an End-User
# who has multiple accounts at the Authorization Server to select amongst the multiple accounts that they might have current
# sessions for. If it cannot obtain an account selection choice made by the End-User, it MUST return an error,
# typically account_selection_required.
mosip.idp.supported.ui.prompts={'none','login','consent','select_account'}

## Type of the client assertion
mosip.idp.supported.client.assertion.types={'urn:ietf:params:oauth:client-assertion-type:jwt-bearer'}

## Type of the client authentication methods for token endpoint
mosip.idp.supported.client.auth.methods={'private_key_jwt'}

## ---------------------------------------- Cache configuration -------------------------------------------
mosip.idp.cache.secure.individual-id=true
mosip.idp.cache.store.individual-id=true
mosip.idp.cache.security.secretkey.reference-id=TRANSACTION_CACHE
mosip.idp.cache.security.algorithm-name=AES/ECB/PKCS5Padding

mosip.idp.cache.names=clientdetails,preauth,authenticated,authcodegenerated,userinfo,linkcodegenerated,linked,linkedcode,linkedauth,consented

#spring.cache.type=redis
#spring.cache.cache-names=${mosip.idp.cache.names}
#spring.redis.host=localhost
#spring.redis.port=6379
management.health.redis.enabled=false

spring.cache.type=simple
mosip.idp.cache.key.hash.algorithm=SHA3-256
mosip.idp.cache.size={'clientdetails' : 200, 'preauth': 200, 'authenticated': 200, 'authcodegenerated': 200, 'userinfo': 200, \
   'linkcodegenerated' : 500, 'linked': 200 , 'linkedcode': 200, 'linkedauth' : 200 , 'consented' :200 }
mosip.idp.cache.expire-in-seconds={'clientdetails' : 86400, 'preauth': 300, 'authenticated': 300, 'authcodegenerated': 300, \
  'userinfo': ${mosip.idp.access-token-expire-seconds}, 'linkcodegenerated' : ${mosip.idp.link-code-expire-in-secs}, \
  'linked': 300 , 'linkedcode': ${mosip.idp.link-code-expire-in-secs}, 'linkedauth' : 300, 'consented': 300 }

## ------------------------------------------ Auth Wrapper ------------------------------------------------

mosip.idp.authn.wrapper.impl=IdentityAuthenticationService
mosip.idp.authn.ida.cert-url=https://${mosip.api.public.host}/mosip-certs/ida-partner.cer
mosip.idp.authn.ida.kyc-auth-url=${mosip.api.internal.url}/idauthentication/v1/kyc-auth/delegated/${mosip.idp.misp.license.key}/
mosip.idp.authn.ida.kyc-exchange-url=${mosip.api.internal.url}/idauthentication/v1/kyc-exchange/delegated/${mosip.idp.misp.license.key}/
mosip.idp.authn.ida.send-otp-url=${mosip.api.internal.url}/idauthentication/v1/otp/${mosip.idp.misp.license.key}/
mosip.idp.authn.wrapper.ida-domainUri=https://${mosip.idp.host}
mosip.idp.authn.wrapper.ida-env=Developer
mosip.idp.authn.ida.otp-channels=email,phone

#mosip.idp.authn.wrapper.impl=MockAuthenticationService
mosip.idp.authn.mock.impl.token-expire-sec=1800
mosip.idp.authn.mock.impl.persona-repo=/home/mosip/mock-auth-data
mosip.idp.authn.mock.impl.policy-repo=/home/mosip/mock-auth-data
mosip.idp.authn.mock.impl.claims-mapping-file=/home/mosip/mock-auth-data/claims_attributes_mapping.json

mosip.idp.authn.wrapper.validate-binding-url=${mosip.api.internal.url}/v1/idpbinding/validate-binding


## ------------------------------------------ Discovery openid-configuration ------------------------------------------------
mosip.idp.domain.url=https://${mosip.api.public.host}
mosip.idp.discovery.issuer-id=${mosip.idp.domain.url}${server.servlet.path}

mosip.idp.discovery.key-values={'issuer': '${mosip.idp.discovery.issuer-id}' ,\
  \ 'authorization_endpoint': '${mosip.idp.domain.url}${server.servlet.path}/authorize' , \
  \ 'token_endpoint': '${mosip.idp.domain.url}${server.servlet.path}/oauth/token' ,\
  \ 'userinfo_endpoint' : '${mosip.idp.domain.url}${server.servlet.path}/oidc/userinfo' , \
  \ 'registration_endpoint' : '${mosip.idp.domain.url}${server.servlet.path}/client-mgmt/oidc-client' , \
  \ 'jwks_uri' : '${mosip.idp.domain.url}${server.servlet.path}/oauth/jwks.json' , \
  \ 'scopes_supported' : ${mosip.idp.supported.openid.scopes}, \
  \ 'response_types_supported' : ${mosip.idp.supported.response.types}, \
  \ 'acr_values_supported' : {'mosip:idp:acr:static-code', 'mosip:idp:acr:generated-code', 'mosip:idp:acr:linked-wallet', 'mosip:idp:acr:biometrics'},\
  \ 'userinfo_signing_alg_values_supported' : {'RS256'}, \
  \ 'userinfo_encryption_alg_values_supported' : {'RSAXXXXX'},\
  \ 'userinfo_encryption_enc_values_supported' : {'A128GCM'}, \
  \ 'response_modes_supported' : { 'query' }, \
  \ 'token_endpoint_auth_methods_supported' : ${mosip.idp.supported.client.auth.methods}, \
  \ 'token_endpoint_auth_signing_alg_values_supported' : {'RS256'}, 'id_token_signing_alg_values_supported' : {'RS256'}, 'claim_types_supported': {'normal'}, \
  \ 'claims_supported' : {'name','address','gender','birthdate','picture','email','phone_number','locale','individual_id'}, 'claims_locales_supported' : {'en'}, 'display_values_supported' : ${mosip.idp.supported.ui.displays}, 'ui_locales_supported' : {'en'} }


##----------------------------------------- Database properties -------------------------------------------

mosip.idp.database.hostname=postgres-postgresql.postgres
mosip.idp.database.port=5432
spring.datasource.url=jdbc:postgresql://${mosip.idp.database.hostname}:${mosip.idp.database.port}/mosip_idp?currentSchema=idp
spring.datasource.username=idpuser
spring.datasource.password=${db.dbuser.password}

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL95Dialect
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#------------------------------------ Key-manager specific properties --------------------------------------
#Crypto asymmetric algorithm name
mosip.kernel.crypto.asymmetric-algorithm-name=RSA/ECB/OAEPWITHSHA-256ANDMGF1PADDING
#Crypto symmetric algorithm name
mosip.kernel.crypto.symmetric-algorithm-name=AES/GCM/PKCS5Padding
#Keygenerator asymmetric algorithm name
mosip.kernel.keygenerator.asymmetric-algorithm-name=RSA
#Keygenerator symmetric algorithm name
mosip.kernel.keygenerator.symmetric-algorithm-name=AES
#Asymmetric algorithm key length
mosip.kernel.keygenerator.asymmetric-key-length=2048
#Symmetric algorithm key length
mosip.kernel.keygenerator.symmetric-key-length=256
#Encrypted data and encrypted symmetric key separator
mosip.kernel.data-key-splitter=#KEY_SPLITTER#
#GCM tag length
mosip.kernel.crypto.gcm-tag-length=128
#Hash algo name
mosip.kernel.crypto.hash-algorithm-name=PBKDF2WithHmacSHA512
#Symmtric key length used in hash
mosip.kernel.crypto.hash-symmetric-key-length=256
#No of iterations in hash
mosip.kernel.crypto.hash-iteration=100000
#Sign algo name
mosip.kernel.crypto.sign-algorithm-name=RS256
#Certificate Sign algo name
mosip.kernel.certificate.sign.algorithm=SHA256withRSA

#mosip.kernel.keymanager.hsm.config-path=local.p12
#mosip.kernel.keymanager.hsm.keystore-type=PKCS12
#mosip.kernel.keymanager.hsm.keystore-pass=${softhsm.idp.security.pin}

#Type of keystore, Supported Types: PKCS11, PKCS12, Offline, JCE
mosip.kernel.keymanager.hsm.keystore-type=PKCS11
# For PKCS11 provide Path of config file.
# For PKCS12 keystore type provide the p12/pfx file path. P12 file will be created internally so provide only file path & file name.
# For Offline & JCE property can be left blank, specified value will be ignored.
mosip.kernel.keymanager.hsm.config-path=/config/softhsm-application.conf
# Passkey of keystore for PKCS11, PKCS12
# For Offline & JCE proer can be left blank. JCE password use other JCE specific properties.
mosip.kernel.keymanager.hsm.keystore-pass=${softhsm.idp.security.pin}


mosip.kernel.keymanager.certificate.default.common-name=www.mosip.io
mosip.kernel.keymanager.certificate.default.organizational-unit=MOSIP-TECH-CENTER
mosip.kernel.keymanager.certificate.default.organization=IITB
mosip.kernel.keymanager.certificate.default.location=BANGALORE
mosip.kernel.keymanager.certificate.default.state=KA
mosip.kernel.keymanager.certificate.default.country=IN

mosip.kernel.keymanager.softhsm.certificate.common-name=www.mosip.io
mosip.kernel.keymanager.softhsm.certificate.organizational-unit=MOSIP
mosip.kernel.keymanager.softhsm.certificate.organization=IITB
mosip.kernel.keymanager.softhsm.certificate.country=IN

# Application Id for PMS master key.
mosip.kernel.partner.sign.masterkey.application.id=PMS
mosip.kernel.partner.allowed.domains=DEVICE

mosip.kernel.keymanager-service-validate-url=https://${mosip.hostname}/keymanager/validate
mosip.kernel.keymanager.jwtsign.validate.json=false
mosip.keymanager.dao.enabled=false
crypto.PrependThumbprint.enable=true

## ---------------------------------------------- UI configs ------------------------------------------------------------------

mosip.idp.ui.config.key-values={'sbi.env': 'Developer', 'sbi.timeout.DISC': 30, \
  'sbi.timeout.DINFO': 30, 'sbi.timeout.CAPTURE': 30, 'sbi.capture.count.face': 1, 'sbi.capture.count.finger': 1, \
  'sbi.capture.count.iris': 1, 'sbi.capture.score.face': 70, 'sbi.capture.score.finger':70, 'sbi.capture.score.iris':70, 'resend.otp.delay.secs': 30, \
  'send.otp.channels' : '${mosip.idp.authn.ida.otp-channels}' }


logging.level.org.springframework.web.client.RestTemplate=DEBUG
