<routes xmlns="http://camel.apache.org/schema/spring">
   <!-- Packet-Reciever to securezone-notification Route -->
   <route id="packet-reciever-->securezone-notification res_reprint route">
      <from uri="eventbus://packet-receiver-res_reprint-bus-out" />
      <log message="packet-reciever-->securezone-notification res_reprint ${bodyAs(String)}" />
      <choice>
         <when>
            <jsonpath>$.[?(@['isValid'] == false &amp;&amp; @['internalError'] == true)]</jsonpath>
            <to uri="workflow-cmd://complete-as-failed" />
         </when>
         <when>
            <jsonpath>$.[?(@['isValid'] == true &amp;&amp; @['internalError'] == true)]</jsonpath>
            <to uri="workflow-cmd://mark-as-reprocess" />
         </when>
         <when>
            <jsonpath>$.[?(@['isValid'] == false &amp;&amp; @['internalError'] == false)]</jsonpath>
            <to uri="workflow-cmd://complete-as-failed" />
         </when>
         <otherwise>
            <to uri="eventbus://securezone-notification-bus-in" />
         </otherwise>
      </choice>
   </route>
   <!-- securezone-notification to packet-uploader Route -->
   <route id="securezone-notification-->packet-uploader res_reprint route">
      <from uri="eventbus://securezone-notification-res_reprint-bus-out" />
      <log message="securezone-notification-->packet-uploader res_reprint route ${bodyAs(String)}" />
      <choice>
         <when>
            <jsonpath>$.[?(@['isValid'] == false &amp;&amp; @['internalError'] == true)]</jsonpath>
            <to uri="workflow-cmd://complete-as-failed" />
         </when>
         <when>
            <jsonpath>$.[?(@['isValid'] == true &amp;&amp; @['internalError'] == true)]</jsonpath>
            <to uri="workflow-cmd://mark-as-reprocess" />
         </when>
         <when>
            <jsonpath>$.[?(@['isValid'] == false &amp;&amp; @['internalError'] == false)]</jsonpath>
            <to uri="workflow-cmd://complete-as-failed" />
         </when>
         <otherwise>
            <to uri="eventbus://packet-uploader-bus-in" />
         </otherwise>
      </choice>
   </route>
   <!-- packet-uploader to credential-requestor-stage Route -->
   <route id="packet-uploader-->credential-requestor-stage res_reprint route">
      <from uri="eventbus://packet-uploader-res_reprint-bus-out" />
      <log message="packet-uploader-->credential-requestor-stage res_reprint route ${bodyAs(String)}" />
      <choice>
         <when>
            <jsonpath>$.[?(@['isValid'] == false &amp;&amp; @['internalError'] == true)]</jsonpath>
            <to uri="workflow-cmd://complete-as-failed" />
            <to uri="workflow-cmd://anonymous-profile" />
         </when>
         <when>
            <jsonpath>$.[?(@['isValid'] == true &amp;&amp; @['internalError'] == true)]</jsonpath>
            <to uri="workflow-cmd://mark-as-reprocess" />
         </when>
         <when>
            <jsonpath>$.[?(@['isValid'] == false &amp;&amp; @['internalError'] == false)]</jsonpath>
            <to uri="workflow-cmd://complete-as-failed" />
            <to uri="workflow-cmd://anonymous-profile" />
         </when>
         <otherwise>
            <to uri="eventbus://credential-requestor-bus-in" />
         </otherwise>
      </choice>
   </route>
   <!-- printing-res_reprint-bus-out to credential-requestor-res_reprint-bus-out Route is kept for backward compatibility. If fresh deployment is done, this route can be removed -->
   <route id="printing-res_reprint-bus-out route-->credential-requestor-res_reprint-bus-out res_reprint route">
      <from uri="eventbus://printing-res_reprint-bus-out" />
      <log message="printing-res_reprint-bus-out--> credential-requestor-res_reprint-bus-out route ${bodyAs(String)}" />
      <to uri="eventbus://credential-requestor-res_reprint-bus-out" />
   </route>
   <route id="credential-requestor-stage--> res_reprint route">
      <from uri="eventbus://credential-requestor-res_reprint-bus-out" />
      <log message="credential-requestor-stage--> route ${bodyAs(String)}" />
      <choice>
         <when>
            <jsonpath>$.[?(@['isValid'] == false &amp;&amp; @['internalError'] == true)]</jsonpath>
            <to uri="workflow-cmd://complete-as-failed" />
            <to uri="workflow-cmd://anonymous-profile" />
         </when>
         <when>
            <jsonpath>$.[?(@['isValid'] == true &amp;&amp; @['internalError'] == true)]</jsonpath>
            <to uri="workflow-cmd://mark-as-reprocess" />
         </when>
         <when>
            <jsonpath>$.[?(@['isValid'] == false &amp;&amp; @['internalError'] == false)]</jsonpath>
            <to uri="workflow-cmd://complete-as-failed" />
            <to uri="workflow-cmd://anonymous-profile" />
         </when>
         <otherwise>
            <to uri="workflow-cmd://complete-as-processed" />
            <to uri="workflow-cmd://anonymous-profile" />
         </otherwise>
      </choice>
   </route>
</routes>
