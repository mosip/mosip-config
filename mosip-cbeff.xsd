<?xml version="1.0" encoding="utf-8"?>
<!--
Permission is hereby granted, free of charge in perpetuity, to any person
obtaining a copy of the Schema, to use, copy, modify, merge and distribute free
of charge, copies of the Schema for the purposes of developing, implementing,
installing and using software based on the Schema, and to permit persons to
whom the Schema is furnished to do so, subject to the following conditions:
THE SCHEMA IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SCHEMA OR THE USE OR OTHER DEALINGS IN THE
SCHEMA.
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
		   xmlns="http://standards.iso.org/iso-iec/19785/-3/ed-2/" targetNamespace="http://standards.iso.org/iso-iec/19785/-3/ed-2/" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<!-- ===== Add these two types ===== -->
	<!-- URL-safe Base64 (accepts padded or unpadded; allows interspersed whitespace) -->
    <xs:simpleType name="base64UrlBinary">
        <xs:restriction base="xs:string">
            <xs:pattern value="[A-Za-z0-9_-]+={0,2}" />
        </xs:restriction>
    </xs:simpleType>

	<!-- Accept either standard Base64 or Base64URL -->
	<xs:simpleType name="base64BinaryOrUrl">
		<xs:union memberTypes="xs:base64Binary base64UrlBinary"/>
	</xs:simpleType>
	<!-- ================================= -->
	
	<xs:simpleType name="dateTimeArray">
		<xs:list>
			<xs:simpleType>
				<xs:restriction base="xs:int"/>
			</xs:simpleType>
		</xs:list>
	</xs:simpleType>

	<!-- Accept either 2025-08-17T17:43:17.212Z or [2025,8,17,17,43,17,212000000] -->
	<xs:simpleType name="dateTimeOrArray">
		<xs:union memberTypes="xs:dateTime dateTimeArray"/>
	</xs:simpleType>
	<!-- ================================= -->

	<xs:element name="BIR" type="BIRType"/>
	<xs:complexType name="BIRType">
		<xs:sequence>
			<xs:element name="Version" type="VersionType" minOccurs="0"/>
			<xs:element name="CBEFFVersion" type="VersionType" minOccurs="0"/>
			<!--<xs:any namespace="##other" processContents="skip" minOccurs="0" maxOccurs="unbounded"/>-->
			<xs:element name="BIRInfo" type="BIRInfoType"/>
			<xs:element name="BDBInfo" type="BDBInfoType" minOccurs="0"/>
			<xs:element name="SBInfo" type="SBInfoType" minOccurs="0"/>
			<xs:element name="BIR" type="BIRType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="BDB" type="base64BinaryOrUrl" minOccurs="0" />
			<xs:element name="SB" type="base64BinaryOrUrl" minOccurs="0" />
			<xs:element name="others" type="OthersListType" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VersionType">
		<xs:sequence>
			<xs:element name="Major" type="xs:unsignedInt"/>
			<xs:element name="Minor" type="xs:unsignedInt"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BIRInfoType">
		<xs:sequence>
			<xs:element name="Creator" type="xs:string" minOccurs="0"/>
			<xs:element name="Index" type="UUIDType" minOccurs="0"/>
			<xs:element name="Payload" type="base64BinaryOrUrl" minOccurs="0"/>
			<xs:element name="Integrity" type="xs:boolean" minOccurs="0"/>
			<xs:element name="CreationDate" type="dateTimeOrArray" minOccurs="0"/>
			<xs:element name="NotValidBefore" type="dateTimeOrArray" minOccurs="0"/>
			<xs:element name="NotValidAfter" type="dateTimeOrArray" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BDBInfoType">
		<xs:sequence>
			<xs:element name="ChallengeResponse" type="base64BinaryOrUrl" minOccurs="0"/>
			<xs:element name="Index" type="UUIDType" minOccurs="0"/>
			<xs:element name="Format" type="RegistryIDType" minOccurs="0"/>
			<xs:element name="Encryption" type="xs:boolean" minOccurs="0"/>
			<xs:element name="CreationDate" type="dateTimeOrArray" minOccurs="0"/>
			<xs:element name="NotValidBefore" type="dateTimeOrArray" minOccurs="0"/>
			<xs:element name="NotValidAfter" type="dateTimeOrArray" minOccurs="0"/>
			<xs:element name="Type" type="MultipleTypesType" minOccurs="0"/>
			<xs:element name="Subtype" type="SubtypeType" minOccurs="0"/>
			<xs:element name="Level" type="ProcessedLevelType" minOccurs="0"/>
			<xs:element name="Product" type="RegistryIDType" minOccurs="0"/>
			<xs:element name="CaptureDevice" type="RegistryIDType" minOccurs="0"/>
			<xs:element name="FeatureExtractionAlgorithm" type="RegistryIDType" minOccurs="0"/>
			<xs:element name="ComparisonAlgorithm" type="RegistryIDType" minOccurs="0"/>
			<xs:element name="CompressionAlgorithm" type="RegistryIDType" minOccurs="0"/>
			<xs:element name="Purpose" type="PurposeType" minOccurs="0"/>
			<xs:element name="Quality" type="QualityType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RegistryIDType">
		<xs:sequence>
			<xs:element name="Organization" type="xs:string"/>
			<xs:element name="Type" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SBInfoType">
		<xs:sequence>
			<xs:element name="Format" type="RegistryIDType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="QualityScoreType">
		<xs:restriction base="xs:unsignedInt">
			<xs:maxInclusive value="100"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="QualityType">
		<xs:sequence>
			<xs:element name="Algorithm" type="RegistryIDType"/>
			<xs:choice>
				<xs:element name="Score" type="QualityScoreType"/>
				<xs:element name="QualityCalculationFailed" type="xs:string"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="SingleTypeType">
		<xs:restriction base="xs:string">
			<xs:pattern value="(?i)(Scent|DNA|Ear|Face|Finger|Foot|HandGeometry|Vein|Iris|Retina|Voice|Gait|Keystroke|LipMovement|SignatureSign|Palm|BackOfHand|Wrist|ExceptionPhoto)"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="MultipleTypesType">
		<xs:list itemType="SingleTypeType"/>
	</xs:simpleType>
	<xs:simpleType name="SingleAnySubtypeType">
		<xs:restriction base="xs:string">
			<xs:pattern value="(?i)(Left|Right|Thumb|IndexFinger|MiddleFinger|RingFinger|LittleFinger)"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="SingleVeinOnlySubtypeType">
		<xs:restriction base="xs:string">
			<xs:pattern value="(?i)(LeftVein|RightVein|Palm|BackOfHand|Wrist|Reserved1|Reserved2)"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="MultipleAnySubtypesType">
		<xs:list itemType="SingleAnySubtypeType"/>
	</xs:simpleType>
	<xs:simpleType name="MultipleVeinOnlySubtypesType">
		<xs:list itemType="SingleVeinOnlySubtypeType"/>
	</xs:simpleType>
	<xs:simpleType name="SubtypeType">
		<xs:union memberTypes="MultipleAnySubtypesType MultipleVeinOnlySubtypesType"/>
	</xs:simpleType>
	<xs:simpleType name="ProcessedLevelType">
		<xs:restriction base="xs:string">
			<xs:pattern value="(?i)(Raw|Intermediate|Processed)"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="PurposeType">
		<xs:restriction base="xs:string">
			<xs:pattern value="(?i)(Verify|Identify|Enroll|EnrollVerify|EnrollIdentify|Audit)"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="UUIDType">
		<xs:restriction base="xs:string">
			<xs:pattern value="[a-fA-F0-9]{8}\-([a-fA-F0-9]{4}\-){3}[a-fA-F0-9]{12}"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="OthersListType">
		<xs:sequence>
			<xs:element name="entry" type="Entry"
						nillable="true" maxOccurs="unbounded"
						minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Entry">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="key" type="xs:string"
							  use="required"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
</xs:schema>
