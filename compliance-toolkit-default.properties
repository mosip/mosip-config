# Follow properites have their values assigned via 'overrides' environment variables of config server docker.
# DO NOT define these in any of the property files.  They must be passed as env variables.  Refer to config-server
# helm chart:
# db.dbuser.password
# mosip.toolkit.client.secret
# keycloak.internal.host
# keycloak.internal.url
# s3.accesskey
# s3.region
# s3.secretkey

## Database properties
# Database hostname below is assuming postgres is running inside cluster in 'postgres' namespace
# If database is external to production, provide the DNS or ip of the host and port

##DB properties
javax.persistence.jdbc.driver=org.postgresql.Driver
mosip.database.ip=postgres-postgresql.postgres
mosip.database.port=5432
javax.persistence.jdbc.url=jdbc:postgresql://${mosip.database.ip}:${mosip.database.port}/mosip_toolkit?useSSL=false
javax.persistence.jdbc.user=toolkituser
javax.persistence.jdbc.password=${db.dbuser.password}

## Hibernate
hibernate.hbm2ddl.auto=none
hibernate.show_sql=false
hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
hibernate.jdbc.lob.non_contextual_creation=true

logging.level.com.zaxxer.hikari=DEBUG

## Project Version for the API response
version=1.0

server.servlet.context-path=/v1/toolkit

## Security properties
mosip.security.csrf-enable=false
mosip.security.cors-enable=true
mosip.security.origins=http://localhost
mosip.security.secure-cookie=false

#iam
mosip.api.internal.url=https://${mosip.api.internal.host}
#keycloak.external.url=${mosip.api.internal.url}/keycloak
iam.base.url=${keycloak.external.url}

#iam adapter setup
mosip.service-context=${server.servlet.context-path}
mosip.service.end-points=/**/toolkit/**
mosip.global.end-points=/**/swagger-ui/**,/**/api-docs/**,/**/assets/**,/**/icons/**,/**/screenshots/**,/favicon**,/**/favicon**,/**/css/**,/**/js/**,/**/error**,/**/webjars/**,/**/csrf,/*/,/**/authenticate/**,/**/actuator/**,/sendOtp,/validateOtp,/invalidateToken,/config,/login,/logout,/validateOTP,/sendOTP,/**/login,/**/login/**,/**/login-redirect/**,/**/logout/**,/**/h2-console/**,/**/**/license/**,/**/callback/**,/**/authenticate/**
#mosip.service.exclude.auth.allowed.method=POST,GET,PATCH,PUT,DELETE
mosip.auth.adapter.impl.basepackage=io.mosip.kernel.auth.defaultadapter
mosip.auth.filter_disable=false
mosip.kernel.auth.adapter.ssl-bypass=true
mosip.kernel.auth.appid-realm-map={toolkit:'mosip'}
mosip.kernel.auth.appids.realm.map={toolkit:'mosip'}

#iam adapter
mosip.iam.adapter.appid=toolkit
mosip.iam.adapter.clientid=mosip-toolkit-client
mosip.iam.adapter.clientsecret=${mosip.toolkit.client.secret}

auth.server.admin.issuer.uri=${keycloak.external.url}/auth/realms/
auth.server.admin.allowed.audience=mosip-toolkit-client,mosip-toolkit-android-client
auth.allowed.urls=https://${mosip.compliance.host}/
mosip.iam.certs_endpoint=${keycloak.external.url}/auth/realms/mosip/protocol/openid-connect/certs

auth.server.validate.url=${mosip.api.internal.url}/v1/authmanager/authorize/admin/validateToken

## below are required for kernel-authcodeflowproxy-api dependency
mosip.iam.module.login_flow.name=authorization_code
mosip.iam.module.login_flow.scope=email
mosip.iam.module.login_flow.response_type=code
mosip.iam.module.clientid=mosip-toolkit-client
mosip.iam.module.clientsecret=${mosip.toolkit.client.secret}
mosip.iam.module.redirecturi=${mosip.api.internal.url}/v1/toolkit/login-redirect/
mosip.iam.module.admin_realm_id=mosip
mosip.iam.base-url=${iam.base.url}
mosip.iam.authorization_endpoint=${keycloak.external.url}/auth/realms/mosip/protocol/openid-connect/auth
mosip.iam.token_endpoint=${iam.base.url}/auth/realms/mosip/protocol/openid-connect/token
auth.server.admin.validate.url=${mosip.api.internal.url}/v1/authmanager/authorize/admin/validateToken

## below are required for kernel CBEFF util dependency
mosip.kernel.xsdstorage-uri=${spring.cloud.config.uri}/${spring.application.name}/${spring.profiles.active}/${spring.cloud.config.label}/
mosip.kernel.xsdfile=mosip-cbeff.xsd

## Minio
object.store.s3.use.account.as.bucketname=true

## To store documents
mosip.kernel.objectstore.account-name=compliance-toolkit

# Object store
object.store.s3.accesskey=${s3.accesskey}
object.store.s3.secretkey=${s3.secretkey}
## For Minio: object.store.s3.url=http://minio.minio:9000
## For AWS: object.store.s3.url=s3.${s3.region}.amazonaws.com
object.store.s3.url=http://minio.minio:9000
object.store.s3.region=${s3.region}
object.store.s3.readlimit=10000000

## Trust Validation of SBI
mosip.service.auth.appid=regproc
mosip.service.auth.clientid=mosip-pms-client
mosip.service.auth.secretkey=${mosip.pms.client.secret}
#mosip.service.validation.url=${mosip.api.internal.url}/v1/partnermanager/deviceprovidermanagement/validate
mosip.service.authmanager.url=${mosip.api.internal.url}/v1/authmanager/authenticate/clientidsecretkey
mosip.service.keymanager.verifyCertificateTrust.url=${mosip.api.internal.url}/v1/keymanager/verifyCertificateTrust

mosip.toolkit.sbi.ports=4501,4502,4503,4504,4505,4506,4507,4508,4509,4510
mosip.toolkit.sbi.timeout=10000
mosip.toolkit.sbi.keyrotation.iterations=2

## To decrypt biometrics in SBI Auth
mosip.service.keymanager.decrypt.appid=COMPLIANCE_TOOLKIT
mosip.service.keymanager.decrypt.refid=COMP-FIR
mosip.service.keymanager.decrypt.url=${mosip.api.internal.url}/v1/keymanager/decrypt
mosip.service.keymanager.encryption.key.url=${mosip.api.internal.url}/v1/keymanager/getCertificate?applicationId=COMPLIANCE_TOOLKIT&referenceId=COMP-FIR

# Threshold value against which the quality check score value will be evaluated for Fingerprint biometric type.
mosip.toolkit.sdk.finger.qualitycheck.threshold.value=60
# Threshold value against which the quality check score value will be evaluated for Face biometric type.
mosip.toolkit.sdk.face.qualitycheck.threshold.value=30
# Threshold value against which the quality check score value will be evaluated for Iris biometric type.
mosip.toolkit.sdk.iris.qualitycheck.threshold.value=60

# TestRuns more than this limit will be moved to archives
mosip.toolkit.testrun.archive.offset=5

mosip.kernel.virus-scanner.host=clamav.clamav
mosip.kernel.virus-scanner.port=3310

#Enable or disable the virus scanner(true/false)
mosip.toolkit.document.scan=true

##the id for API
mosip.toolkit.api.id.projects.get=mosip.toolkit.projects.retrieve
mosip.toolkit.api.id.sbi.project.get=mosip.toolkit.sbi.project.retrieve
mosip.toolkit.api.id.collections.get=mosip.toolkit.collections.retrieve
mosip.toolkit.api.id.collection.get=mosip.toolkit.collection.retrieve
mosip.toolkit.api.id.sdk.project.get=mosip.toolkit.sdk.project.retrieve
mosip.toolkit.api.id.sdk.project.put=mosip.toolkit.sdk.project.update
mosip.toolkit.api.id.sdk.project.post=mosip.toolkit.sdk.project.add
mosip.toolkit.api.id.collection.post=mosip.toolkit.collection.add
mosip.toolkit.api.id.sbi.project.post=mosip.toolkit.sbi.project.add
mosip.toolkit.api.id.testcase.project.get=mosip.toolkit.testcase.project.retrieve
mosip.toolkit.api.id.validations.post=mosip.toolkit.api.id.validations
mosip.toolkit.api.id.generate.sdk.request.post=mosip.toolkit.api.id.generate.sdk.request
mosip.toolkit.api.id.collection.testcases.get=mosip.toolkit.collection.testcases.retrieve
mosip.toolkit.api.id.collection.testcase.post=mosip.toolkit.collection.testcase.add
mosip.toolkit.api.id.testrun.post=mosip.toolkit.testrun.add
mosip.toolkit.api.id.testrun.put=mosip.toolkit.testrun.update
mosip.toolkit.api.id.testrun.details.post=mosip.toolkit.testrun.details.add
mosip.toolkit.api.id.testrun.details.get=mosip.toolkit.testrun.details.retrieve
mosip.toolkit.api.id.testcase.get=mosip.toolkit.testcase.retrieve
mosip.toolkit.api.id.testrun.history.get=mosip.toolkit.testrun.history.retrieve
mosip.toolkit.api.id.testrun.status.get=mosip.toolkit.testrun.status.retrieve
mosip.toolkit.api.id.sdk.generate.request=mosip.toolkit.api.id.sdk.generate.request
mosip.toolkit.api.id.biometric.testdata.get=mosip.toolkit.biometric.testdata.retrieve
mosip.toolkit.api.id.biometric.testdata.post=mosip.toolkit.biometric.testdata.add
mosip.toolkit.api.id.biometric.testdata.filenames.get=mosip.toolkit.biometric.testdata.filenames.retrieve
mosip.toolkit.api.id.resource.file.post=mosip.toolkit.resource.file.add

#Roles for validation
mosip.toolkit.roles.uploadResource=GLOBAL_ADMIN
mosip.toolkit.roles.saveTestCases=GLOBAL_ADMIN

## Determines file upload type allowed in UI
mosip.toolkit.documentupload.allowed.file.type = application/zip
# Determines the file name length(with extension) allowed in UI
mosip.toolkit.documentupload.allowed.file.nameLength = 50

# Determines maximum size of file allowed uploaded 20 MB
mosip.toolkit.documentupload.allowed.file.size = 20000000

mosip.toolkit.max.allowed.gallery.files=5

#Swagger
openapi.info.title=Compliance-Toolkit
openapi.info.description=Compliance Toolkit Services
openapi.info.version=1.0
openapi.info.license.name=Mosip
openapi.info.license.url=https://docs.mosip.io/platform/license
mosipbox.public.url=${mosip.api.internal.url}
openapi.service.servers[0].url=${mosipbox.public.url}${server.servlet.context-path}
openapi.service.servers[0].description=Compliance Toolkit Services
openapi.group.name=${openapi.info.title}
openapi.group.paths[0]=/**
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.operationsSorter=alpha

#SBI BiometricsQualityCheckValidator
mosip.toolkit.sbi.qualitycheck.finger.sdk.urls=[{"name": "Mock SDK","url": "http://localhost:9099/biosdk-service","healthUrl": "http://localhost:9099/biosdk-service/actuator/health", "includeInResults":false},{"name": "Mock SDK ${mosip.api.internal.host} Env","url": "${mosip.api.internal.url}/biosdk-service","healthUrl": "${mosip.api.internal.url}/biosdk-service/actuator/health", "includeInResults":true},{"name": "Mock SDK ${mosip.api.internal.host} Env","url": "${mosip.api.internal.url}/biosdk-service","healthUrl": "${mosip.api.internal.url}/biosdk-service/actuator/health", "includeInResults":true}]
mosip.toolkit.sbi.qualitycheck.face.sdk.urls=[{"name": "Mock SDK ${mosip.api.internal.host} Env","url": "${mosip.api.internal.url}/biosdk-service","healthUrl": "${mosip.api.internal.url}/biosdk-service/actuator/health", "includeInResults":false}]
mosip.toolkit.sbi.qualitycheck.iris.sdk.urls=[{"name": "Mock SDK ${mosip.api.internal.host} Env","url": "${mosip.api.internal.url}/biosdk-service","healthUrl": "${mosip.api.internal.url}/biosdk-service/actuator/health", "includeInResults":true}]
