# Follow properites have their values assigned via 'overrides' environment variables of config server docker.
# DO NOT define these in any of the property files.  They must be passed as env variables.  Refer to config-server
# helm chart:
# db.dbuser.password 
# mosip.prereg.client.secret
# prereg.captcha.site.key
# prereg.captcha.secret.key
# keycloak.internal.host
# keycloak.internal.url
# s3.accesskey 
# s3.region
# s3.secretkey

## Database properties
# Database hostname below is assuming postgres is running inside cluster in 'postgres' namespace
# If database is external to production, provide the DNS or ip of the host and port 
javax.persistence.jdbc.driver=org.postgresql.Driver
mosip.database.ip=postgres-postgresql.postgres
mosip.database.port=5432
javax.persistence.jdbc.url=jdbc:postgresql://${mosip.database.ip}:${mosip.database.port}/mosip_prereg?useSSL=false
javax.persistence.jdbc.user=prereguser
javax.persistence.jdbc.password=${db.dbuser.password}

## Hibernate
hibernate.hbm2ddl.auto=none
hibernate.show_sql=false
hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
hibernate.jdbc.lob.non_contextual_creation=true

logging.level.com.zaxxer.hikari=INFO

## Project Version for the API response 
version=1.0

## Age to be an adult
## Used in UI to identify the applicant type 
mosip.adult.age=${mosip.kernel.applicant.type.age.limit}

## ID Schema 
## This version is set in the ID object created in pre-registration
mosip.idschema.version=0.1

mosip.prereg.application.url=http://prereg-application.prereg

## Demographic Service 
demographic.service.version=v1
demographic.service.env=${mosip.prereg.application.url}
demographic.service.contextpath=preregistration/${demographic.service.version}
demographic.resource.url=${demographic.service.env}/${demographic.service.contextpath}
# ID values for application APIs
mosip.preregistration.demographic.create.id=mosip.pre-registration.demographic.create
mosip.preregistration.demographic.update.id=mosip.pre-registration.demographic.update
mosip.preregistration.demographic.update.status.id=mosip.pre-registration.demographic.status.update
mosip.preregistration.demographic.retrieve.basic.id=mosip.pre-registration.demographic.retrieve.basic
mosip.preregistration.demographic.retrieve.details.id=mosip.pre-registration.demographic.retrieve.details
mosip.preregistration.demographic.retrieve.status.id=mosip.pre-registration.demographic.retrieve.status
mosip.preregistration.demographic.retrieve.date.id=mosip.pre-registration.demographic.retrieve.date
mosip.preregistration.demographic.delete.id=mosip.pre-registration.demographic.delete

mosip.preregistration.demographic.id.create=mosip.pre-registration.demographic.create
mosip.preregistration.demographic.id.update=mosip.pre-registration.demographic.update
mosip.preregistration.demographic.id.retrieve.date=mosip.pre-registration.demographic.retrieve.date
mosip.id.preregistration.demographic.create=mosip.pre-registration.demographic.create
mosip.id.preregistration.demographic.update=mosip.pre-registration.demographic.update
mosip.id.preregistration.demographic.retrieve.date=mosip.pre-registration.demographic.retrieve.date

## Document Service
document.service.version=v1
document.service.env=${mosip.prereg.application.url}
document.service.contextpath=preregistration/${document.service.version}
document.resource.url=${document.service.env}/${document.service.contextpath}

## ID values for document APIs
mosip.preregistration.document.upload.id=mosip.pre-registration.document.upload
mosip.preregistration.document.copy.id=mosip.pre-registration.document.copy
mosip.preregistration.document.fetch.metadata.id=mosip.pre-registration.document.fetch.metadata
mosip.preregistration.document.fetch.content.id=mosip.pre-registration.document.fetch.content
mosip.preregistration.document.delete.id=mosip.pre-registration.document.delete
mosip.preregistration.document.delete.specific.id=mosip.pre-registration.document.delete.specific
mosip.preregistration.document.id.upload=mosip.pre-registration.document.upload
mosip.preregistration.document.update.docrefId.id=mosip.preregistration.docrefId.update

## Document properties
# Maximum size of file allowed uploaded in document service API (in mb)
max.file.size=2

# Allowed formats for documents
preregistration.document.extention=PDF,JPEG,PNG,JPG

## Virus scanner 
## 'true/false' to enable/disable virus scaning during document upload
mosip.preregistration.document.scan=true

## To store documents
mosip.kernel.objectstore.account-name=prereg

## Booking Service
booking.service.version=v1

mosip.prereg.booking.url=http://prereg-booking.prereg
booking.service.env=${mosip.prereg.booking.url}
booking.service.contextpath=preregistration/${booking.service.version}
booking.resource.url=${booking.service.env}/${booking.service.contextpath}
appointmentResourse.url=${booking.resource.url}
mosip.preregistration.booking.availability.sync.id=mosip.pre-registration.appointment.availability.sync
mosip.preregistration.booking.book.id=mosip.pre-registration.booking.book
mosip.preregistration.booking.fetch.booking.id=mosip.pre-registration.appointment.fetch
mosip.preregistration.booking.cancel.id=mosip.pre-registration.appointment.cancel
mosip.preregistration.booking.delete.id=mosip.preregistration.booking.delete
mosip.preregistration.booking.fetch.availability.id=mosip.pre-registration.appointment.availability
mosip.preregistration.booking.fetchPreidByDate.id=mosip.pre-registration.appointment.ids
mosip.preregistration.booking.availability.increase.id=mosip.preregistration.booking.availability.increase
mosip.preregistration.booking.availability.check.id=mosip.preregistration.booking.availability.check
mosip.preregistration.booking.delete.old.id=mosip.preregistration.booking.delete.old
mosip.preregistration.booking.exception.id=mosip.preregistration.booking.parse.exception
mosip.preregistration.booking.id.book=mosip.pre-registration.booking.book

# Sync
mosip.preregistration.sync.sign.appid=KERNEL
mosip.preregistration.sync.sign.refid=SIGN

## Booking 
## Sync every n days 
preregistration.availability.sync=30
## Number of days for which booking slots will be available. Should be lesser than or equal to preregistration.availability.sync days. 
preregistration.availability.noOfDays=140
## Gap between the date of booking and the first appointment date to be shown
## Ex: If a user has logged in pre-reg application today then, he can select booking slots after n days
preregistration.booking.offset=2
## Number of hours from the appointment time before which an appicant can change/re-book the appointment
preregistration.timespan.rebook=0
## Number of hours before the appointment time before which an applicant can cancel an appointment 
preregistration.timespan.cancel=0

## Time Zone 
# Not used anymore. 
# preregistration.country.specific.zoneId=GMT+05:30

## Batch job service
batch.service.version=v1
batch.service.env=http://prereg-batchjob.prereg
batch.service.contextpath=preregistration/${batch.service.version}/batch
batch.resource.url=${batch.service.env}/${batch.service.contextpath}
## Id values of batch job service
mosip.preregistration.batchjob.service.consumed.id=mosip.pre-registration.batchjob.service.consumed
mosip.preregistration.batchjob.service.expired.id=mosip.pre-registration.batchjob.service.expired

# Batch Job Service used to fetch token from key cloak
mosip.batch.token.authmanager.appId=prereg
mosip.batch.token.authmanager.userName=mosip-prereg-client
mosip.batch.token.authmanager.password=${mosip.prereg.client.secret}
mosip.batch.token.authmanager.url=${kernel.auth.env}/${masterdata.service.version}/${kernel.auth.contextpath}/authenticate/clientidsecretkey
mosip.batch.token.request.id=

## Determines the Time of the day, batch job should be intiated
preregistration.job.schedule.cron.consumedStatusJob=0 0 0 * * ?
preregistration.job.schedule.cron.slotavailability=0 0 0 * * ?
preregistration.job.schedule.cron.expiredStatusJob=0 0 0 * * ?
preregistration.job.schedule.cron.updateApplicationsBookingJob=0 0 * ? * *
preregistration.job.schedule.cron.purgeExpiredRegCenterSlots=0 0 0 * * ?

# Map to decide code for days of the week. Used by BatchJob
mosip.kernel.masterdata.day.codes.map={SUNDAY:'101', MONDAY:'102', TUESDAY:'103', WEDNESDAY:'104', THURSDAY:'105', FRIDAY:'106', SATURDAY:'107'}

## Schema name for batch job table
spring.batch.tablePrefix=PREREG.BATCH_
## Booking service URL for creating time slots
bookingAvailablity.url=${booking.resource.url}/appointment/availability/sync
##BatchJob-service URL for updating the consumed status
updateConsumedStatus.url=${batch.resource.url}/consumedStatus
#BatchJob-service URL for updating to expiredStatus
expiredStatus.url=${batch.resource.url}/expiredStatus
batch.appointment.cancel=${mosip.prereg.application.url}/preregistration/v1/internal/applications/appointment/{preRegistrationId}

## Login service
mosip.pre.reg.clientId=mosip.pre.reg.clientId
id-masterdata-template-service-multilang.rest.uri=${mosip.kernel.masterdata.url}/v1/masterdata/templates/{langcode}/{templatetypecode}

## Masterdata service
## Base url is only used for masterdata. We give the in-cluster url here
mosip.base.url=${mosip.kernel.masterdata.url}
masterdata.service.version=v1
masterdata.service.env=${mosip.kernel.masterdata.url}
masterdata.service.contextpath=masterdata
masterdata.resource.url=${masterdata.service.env}/${masterdata.service.version}/${masterdata.service.contextpath}
regCenter.url=${masterdata.resource.url}/registrationcenters
holiday.url=${masterdata.resource.url}/getregistrationcenterholidays/
holiday.exceptional.url=${masterdata.resource.url}/exceptionalholidays/
working.day.url=${masterdata.resource.url}/workingdays/
mosip.kernel.masterdata.validdoc.rest.uri=${masterdata.resource.url}/validdocuments/all?pageSize=50
##Kernel Service URL for fetching templates
resource.template.url=${masterdata.resource.url}/templates
mosip.pre-registration.notification.id=mosip.pre-registration.notification.notify

## Notification templates for various scenarios
email.acknowledgement.template=Email-Acknowledgement
email.acknowledgement.subject.template=Acknowledgement-email-subject
sms.acknowledgement.template=SMS-Acknowledgement
cancel.appoinment.template=cancel-appointment
cancel.appointment.email.subject=cancel-appointment-email-subject

## Notification service
notification.service.version=v1
notification.service.env=${mosip.prereg.application.url}
notification.service.contextpath=preregistration/${notification.service.version}
#notification.url=${notification.service.env}/${notification.service.version}/${notification.service.contextpath}/notification
notification.url=${notification.service.env}/${notification.service.contextpath}/internal/notification
mosip.pre-registration.notification.id.send=mosip.pre-registration.notification.notify
# TimeZone to get an Email or SMS Templates
# timeZone=Asia/Calcutta

## Email service 
email.service.env=${mosip.kernel.notification.url}
email.service.contextpath=notifier
#Kernel Service URL for Sending Emails
emailResourse.url=${email.service.env}/${masterdata.service.version}/${email.service.contextpath}/email/send

## SMS service
sms.service.env=${mosip.kernel.notification.url}
sms.service.contextpath=notifier
#Kernel service URL for sending SMS
smsResourse.url=${sms.service.env}/${masterdata.service.version}/${sms.service.contextpath}/sms/send

## Audit service 
audit.service.env=${mosip.kernel.auditmanager.url}
audit.service.contextpath=auditmanager
audit.url=${audit.service.env}/${masterdata.service.version}/${audit.service.contextpath}/audits

## Crypto service 
crypto.service.env=${mosip.kernel.keymanager.url}
crypto.service.contextpath=keymanager
## Kernel Service URL for Encryption and decryption 
cryptoResource.url=${crypto.service.env}/${masterdata.service.version}/${crypto.service.contextpath}
preregistration.crypto.applicationId=PRE_REGISTRATION
preregistration.crypto.referenceId=INDIVIDUAL
preregistration.crypto.PrependThumbprint=false

##  KeyCloak 
## Both below fields must match with what is there on Keycloak properties 
clientId=mosip-prereg-client
secretKey=${mosip.prereg.client.secret}

## Used for Key Creating KeyCloak session
userIdType=USERID
appId=prereg

## Auth service 
kernel.auth.env=${mosip.kernel.auditmanager.url}
kernel.auth.contextpath=authmanager
auth.server.validate.url=${mosip.kernel.authmanager.url}/v1/authmanager/authorize/admin/validateToken
auth.server.admin.allowed.audience=mosip-regproc-client,mosip-prereg-client,mosip-admin-client,mosip-reg-client

## PRID service 
kernel.prid.env=${mosip.kernel.pridgenerator.url}
kernel.prid.contextpath=pridgenerator
mosip.io.prid.url=${kernel.prid.env}/${masterdata.service.version}/${kernel.prid.contextpath}/prid

## Syncdata service
latestidschema.service.contextpath=latestidschema
mosip.preregistration.id-schema=${mosip.kernel.syncdata.url}/v1/syncdata/latestidschema
syncdata.resource.url=${mosip.kernel.syncdata.url}/v1/syncdata

## OTP 
sendOtp.resource.url=${kernel.auth.env}/${masterdata.service.version}/${kernel.auth.contextpath}
otpChannel.mobile=phone
otpChannel.email=email
secret_url.id=string
secret_url.requesttime=2018-12-10T06:12:52.994Z
secret_url.version=string
otp.request.flooding.duration=1
otp.request.flooding.max-count=3
datetime.pattern=yyyy-MM-dd'T'HH:mm:ss.SSSXXX
mail-notification.rest.uri=${mosip.kernel.notification.url}/v1/notifier/email/send
sms-notification.rest.uri=${mosip.kernel.notification.url}/v1/notifier/sms/send
otp-generate.rest.uri=${mosip.kernel.otpmanager.url}/v1/otpmanager/otp/generate
pre.reg.login.otp.sms.template=otp-sms-template
pre.reg.login.otp.mail.subject.template=OTP-email-subject-template
pre.reg.login.otp.mail.content.template=OTP-email-content-template
pre.reg.login.otp.validation-attempt-threshold=10

## Login service 
mosip.preregistration.login.service.version=1.0
mosip.preregistration.sendotp.id=mosip.pre-registration.login.sendotp
mosip.preregistration.validateotp.id=mosip.pre-registration.login.useridotp
mosip.id.preregistration.sendotp=mosip.pre-registration.login.sendotp
mosip.id.preregistration.validateotp=mosip.pre-registration.login.useridotp
mosip.preregistration.invalidatetoken.id=mosip.pre-registration.login.invalidate
mosip.preregistration.config.id=mosip.pre-registration.login.config
mosip.preregistration.login.id.sendotp=mosip.pre-registration.login.sendotp
mosip.preregistration.login.id.validateotp=mosip.pre-registration.login.useridotp
mosip.preregistration.login.id.invalidatetoken=mosip.pre-registration.login.invalidate
mosip.preregistration.login.id.config=mosip.pre-registration.login.config

iam.base.url=${keycloak.internal.url}
auth-token-generator.rest.issuerUrl=${iam.base.url}/auth/realms/mosip
validationStatus=success
context=auth-otp
prereg.auth.jwt.secret=Yn2kjibddFAWtnPJ2AFlL8WXmohJMCvigQggaEypa5E=
prereg.auth.jwt.token.expiration=3600
prereg.auth.jwt.token.roles=INDIVIDUAL

## ID object validation
mosip.kernel.idobjectvalidator.masterdata.documentcategories.lang.rest.uri=${masterdata.resource.url}/documentcategories/{langcode}
mosip.kernel.idobjectvalidator.masterdata.languages.rest.uri=${masterdata.resource.url}/languages
#mosip.kernel.idobjectvalidator.masterdata.gendertypes.rest.uri=${masterdata.resource.url}/gendertypes
mosip.kernel.idobjectvalidator.masterdata.documentcategories.rest.uri=${masterdata.resource.url}/documentcategories
mosip.kernel.idobjectvalidator.masterdata.documenttypes.rest.uri=${masterdata.resource.url}/documenttypes/{documentcategorycode}/{langcode}
mosip.kernel.idobjectvalidator.masterdata.locations.rest.uri=${masterdata.resource.url}/locations/{langcode}
mosip.kernel.idobjectvalidator.masterdata.locationhierarchy.rest.uri=${masterdata.resource.url}/locations/locationhierarchy/{hierarchyname}
## Class name of the referenceValidator. Commenting or removing this property will disable reference validator.
mosip.kernel.idobjectvalidator.referenceValidator=io.mosip.kernel.idobjectvalidator.impl.IdObjectReferenceValidator

## Configurations file names 
global.config.file=application-${spring.profiles.active}.properties
pre.reg.config.file=pre-registration-${spring.profiles.active}.properties
## Mapping file for Pre-registration & ID Object
preregistration.config.identityjson=identity-mapping.json 

# Verify where it is used
preregistration.response = response
preregistration.identity.name=fullName
preregistration.demographicDetails=demographicDetails
preregistration.identity.email=email
preregistration.identity.phone=phone
preregistration.identity=identity 

## QR code service
mosip.pre-registration.qrcode.generate.id=mosip.pre-registration.qrcode.generate
mosip.pre-registration.qrcode.service.version=1.0
qrversion=V1
mosip.pre-registration.qrcode.id.generate=mosip.pre-registration.qrcode.generate
mosip.id.pre-registration.qrcode.generate=mosip.pre-registration.qrcode.generate

## Data sync with registration client
mosip.id.preregistration.datasync.fetch.ids=mosip.pre-registration.datasync.fetch.ids
## id for storing consumed pre-registration ids API
mosip.id.preregistration.datasync.store=mosip.pre-registration.datasync.store
## id for get preregistration id API
mosip.id.preregistration.datasync.fetch=mosip.pre-registration.datasync.fetch

## Verify 
poa.url=proofOfAddress
poi.url=proofOfIdentity
pod.url=proofOfDateOfBirth
por.url=proofOfRelationship

## Transliteration service
## Determines request & response id of transliteration-service
mosip.pre-registration.transliteration.transliterate.id=mosip.pre-registration.transliteration.transliterate
mosip.id.pre-registration.transliteration.transliterate=mosip.pre-registration.transliteration.transliterate
mosip.lang.traslate.adapter.impl.basepackage = io.mosip.kernel.transliteration.icu4j

## List of keys which UI will consume
ui.config.params=preregistration.availability.sync,preregistration.availability.noOfDays,mosip.id.validation.identity.email,mosip.id.validation.identity.postalCode,mosip.id.validation.identity.phone,mosip.id.validation.identity.dateOfBirth,mosip.id.validation.identity.referenceIdentityNumber,mosip.default.dob.month,mosip.default.dob.day,mosip.kernel.otp.expiry-time,mosip.kernel.otp.validation-attempt-threshold,mosip.kernel.otp.default-length,mosip.kernel.sms.number.length,mosip.kernel.pin.length,preregistration.max.file.size,preregistration.recommended.centers.locCode,preregistration.nearby.centers,mosip.login.mode,preregistration.workflow.demographic,preregistration.workflow.documentupload,preregistration.workflow.booking,preregistration.auto.logout,preregistration.timespan.cancel,preregistration.timespan.rebook,preregistration.booking.offset,mosip.right_to_left_orientation,mosip.left_to_right_orientation,mosip.id.validation.identity.age,mosip.id.validation.identity.fullName.[*].value,mosip.id.validation.identity.addressLine1.[*].value,preregistration.documentupload.allowed.file.type,preregistration.documentupload.allowed.file.nameLength,preregistration.documentupload.allowed.file.size,mosip.preregistration.auto.logout.idle,mosip.preregistration.auto.logout.timeout,mosip.preregistration.auto.logout.ping,mosip.country.code,mosip.notificationtype,mosip.kernel.idobjectvalidator.masterdata.locations.locationNotAvailable,mosip.preregistration.captcha.sitekey,mosip.adult.age,mosip.idschema.version,mosip.preregistration.captcha.enable,preregistration.identity.name,preregistration.ui.version,preregistration.contact.email,preregistration.contact.phone

## This config is used for loading recommended centers based on the value of the config. 
## The value depicts the location hierarchy code of the hierarchy based on which the recommended centers is loaded
preregistration.recommended.centers.locCode=5
## The Registration centers will be searched based on the distance value from the Geo location identified
preregistration.nearby.centers=2000
## Determines file upload type allowed in UI
preregistration.documentupload.allowed.file.type = application/pdf,image/jpeg,image/png,image/jpg
# Determines the file name length(with extension) allowed in UI
preregistration.documentupload.allowed.file.nameLength = 50
# Determines maximum size of file allowed uploaded in document service api (in bytes)
preregistration.documentupload.allowed.file.size = 2000000
# Determines idle condition(in seconds)
mosip.preregistration.auto.logout.idle=180
# Determines pop up timer(in seconds)
mosip.preregistration.auto.logout.timeout=60
preregistration.ui.version=1.2.0

preregistration.contact.email=contact@dev.mosip.net
preregistration.contact.phone=9999999999

mosip.preregistration.anonymous-profile-username=admin

# Determines to maintain iternal cycle & make sure value is not null (any value greater than zero)
mosip.preregistration.auto.logout.ping=30

mosip.id.validation.identity.dateOfBirth=^\d{4}[\-\/\s]?((((0[13578])|(1[02]))[\-\/\s]?(([0-2][0-9])|(3[01])))|(((0[469])|(11))[\-\/\s]?(([0-2][0-9])|(30)))|(02[\-\/\s]?[0-2][0-9]))$
mosip.id.validation.identity.email=^[\\w-\\+]+(\\.[\\w]+)*@[\\w-]+(\\.[\\w]+)*(\\.[a-zA-Z]{2,})$
mosip.id.validation.identity.phone=^([6-9]{1})([0-9]{9})$

## Captcha service
## Configuration for google re-captcha
mosip.preregistration.captcha.enable=false
mosip.preregistration.captcha.id.validate=mosip.pre-registration.captcha.id.validate
mosip.preregistration.captcha.sitekey=${prereg.captcha.site.key}
mosip.preregistration.captcha.secretkey=${prereg.captcha.secret.key}
mosip.preregistration.captcha.resourse.url=http://prereg-captcha.prereg/preregistration/v1/captcha/validatecaptcha
mosip.preregistration.captcha.recaptcha.verify.url=https://www.google.com/recaptcha/api/siteverify

## Security 
mosip.security.csrf-enable:false
mosip.security.cors-enable:false
# Comma Separated Allowed Origins
mosip.security.origins:localhost:8080,localhost:4200,${mosip.api.internal.url}
mosip.security.secure-cookie:false

## for prereg booking notification name validation
preregistration.notification.nameFormat=fullName

## Minio
object.store.s3.use.account.as.bucketname=true

## Spring cache
spring.cache.type=none

mosip.preregistration.appointment.getavailablity.url=${mosip.prereg.booking.url}/preregistration/v1/appointment/availability/{registrationCenterId}
mosip.preregistration.appointment.book.url=${mosip.prereg.booking.url}/preregistration/v1/appointment/{preRegistrationId}
mosip.preregistration.appointment.multi.book.url=${mosip.prereg.booking.url}/preregistration/v1/appointment
mosip.preregistration.applications.status.get = mosip.preregistration.applications.status
mosip.preregistration.applications.details.get = mosip.preregistration.applications.detail.info
mosip.preregistration.uispec.latest=mosip.preregistration.uispec.latest
mosip.preregistration.uispec.all=mosip.preregistration.uispec.all

preregistration.cookie.contextpath=/

# To generate token from keycloak. Use by kernel auth adapter.
mosip.iam.adapter.clientid=mosip-prereg-client
mosip.iam.adapter.clientsecret=${mosip.prereg.client.secret}

# mosip.prereg.client.secret
mosip.iam.adapter.appid=prereg

# To generate token from keycloak in PreReg Data Sync Service. Used by kernel auth adapter.
mosip.iam.adapter.clientid.pre-registration-datasync-service=mosip-reg-client
mosip.iam.adapter.clientsecret.pre-registration-datasync-service=${mosip.reg.client.secret}
mosip.iam.adapter.appid.pre-registration-datasync-service=registrationclient

#the custom auth provider component names list
mosip.security.authentication.provider.beans.list.pre-registration-application-service=customJWTAuthProvider
mosip.security.authentication.provider.beans.list.pre-registration-booking-service=customJWTAuthProvider

# Object store

object.store.s3.accesskey=${s3.accesskey}
object.store.s3.secretkey=${s3.secretkey}
## For Minio: object.store.s3.url=http://minio.minio:9000
## For AWS: object.store.s3.url=s3.${s3.region}.amazonaws.com
object.store.s3.url=http://minio.minio:9000
object.store.s3.region=${s3.region}
object.store.s3.readlimit=10000000

# Roles
mosip.role.prereg.postapplications=INDIVIDUAL,REGISTRATION_OFFICER,REGISTRATION_SUPERVISOR,REGISTRATION_ADMIN
mosip.role.prereg.putapplications=INDIVIDUAL,REGISTRATION_OFFICER,REGISTRATION_SUPERVISOR,REGISTRATION_ADMIN
mosip.role.prereg.getapplications=REGISTRATION_OFFICER,INDIVIDUAL,REGISTRATION_SUPERVISOR,REGISTRATION_ADMIN,PRE_REGISTRATION_ADMIN
mosip.role.prereg.putapplicationsstatus=REGISTRATION_OFFICER,INDIVIDUAL,REGISTRATION_SUPERVISOR,REGISTRATION_ADMIN,PRE_REGISTRATION_ADMIN
mosip.role.prereg.getapplicationsall=REGISTRATION_OFFICER,INDIVIDUAL,REGISTRATION_SUPERVISOR,REGISTRATION_ADMIN
mosip.role.prereg.getapplicationsstatus=REGISTRATION_OFFICER,INDIVIDUAL,REGISTRATION_SUPERVISOR,REGISTRATION_ADMIN,PRE_REGISTRATION_ADMIN
mosip.role.prereg.deleteapplications=INDIVIDUAL,REGISTRATION_OFFICER,REGISTRATION_SUPERVISOR,REGISTRATION_ADMIN
mosip.role.prereg.postapplicationsupdatedtime=REGISTRATION_OFFICER,INDIVIDUAL,REGISTRATION_SUPERVISOR,REGISTRATION_ADMIN,REGISTRATION_PROCESSOR
mosip.role.prereg.getapplicationsconfig=INDIVIDUAL
mosip.role.prereg.getapplicationsinfo=REGISTRATION_OFFICER,INDIVIDUAL,REGISTRATION_SUPERVISOR,REGISTRATION_ADMIN,PRE_REGISTRATION_ADMIN
mosip.role.prereg.postlogaudit=REGISTRATION_OFFICER,INDIVIDUAL,REGISTRATION_SUPERVISOR,REGISTRATION_ADMIN
mosip.role.prereg.postdocumentspreregistrationid=INDIVIDUAL
mosip.role.prereg.putdocumentspreregistrationid=INDIVIDUAL
mosip.role.prereg.getdocumentsdocumentid=REGISTRATION_OFFICER,REGISTRATION_SUPERVISOR,REGISTRATION_ADMIN,INDIVIDUAL
mosip.role.prereg.getdocumentspreregistrationid=REGISTRATION_OFFICER,INDIVIDUAL
mosip.role.prereg.deletedocumentsdocumentid=INDIVIDUAL
mosip.role.prereg.deletedocumentspreregistrationid=INDIVIDUAL
mosip.role.prereg.putdocumentsdocumentid=INDIVIDUAL,REGISTRATION_OFFICER,REGISTRATION_SUPERVISOR,REGISTRATION_ADMIN
mosip.role.prereg.postqrcodegenerate=INDIVIDUAL
mosip.role.prereg.getrefreshconfig=PRE_REGISTRATION_ADMIN
mosip.role.prereg.postnotificationnotify=REGISTRATION_OFFICER,INDIVIDUAL,PRE_REGISTRATION_ADMIN
mosip.role.prereg.postnotification=INDIVIDUAL,PRE_REGISTRATION_ADMIN
mosip.role.prereg.posttransliterationtransliterate=REGISTRATION_OFFICER,REGISTRATION_SUPERVISOR,REGISTRATION_ADMIN,INDIVIDUAL
mosip.role.prereg.getuispeclatest=REGISTRATION_OFFICER,REGISTRATION_SUPERVISOR,REGISTRATION_ADMIN,INDIVIDUAL
mosip.role.prereg.getuispecall=REGISTRATION_OFFICER,REGISTRATION_SUPERVISOR,REGISTRATION_ADMIN,INDIVIDUAL
mosip.role.prereg.postpreregsync=REGISTRATION_OFFICER,REGISTRATION_SUPERVISOR,REGISTRATION_ADMIN
mosip.role.prereg.getsyncpreregistrationid=REGISTRATION_OFFICER,REGISTRATION_SUPERVISOR,REGISTRATION_ADMIN
mosip.role.prereg.getsyncpreregistrationidmachineid=REGISTRATION_OFFICER,REGISTRATION_SUPERVISOR,REGISTRATION_ADMIN
mosip.role.prereg.postsyncconsumedpreregids=REGISTRATION_OFFICER,REGISTRATION_SUPERVISOR,REGISTRATION_ADMIN,REGISTRATION_PROCESSOR
mosip.role.prereg.cancelappointmentpreregid=REGISTRATION_OFFICER,INDIVIDUAL,PRE_REGISTRATION_ADMIN
mosip.role.prereg.deleteappointmentpreregid=REGISTRATION_OFFICER,INDIVIDUAL,PRE_REGISTRATION_ADMIN
mosip.role.prereg.getappointmentavailability=INDIVIDUAL
mosip.role.prereg.postappointmentpreregistrationid=INDIVIDUAL
mosip.role.prereg.postappointment=INDIVIDUAL
mosip.role.prereg.getappointmentpreregistrationid=REGISTRATION_OFFICER,REGISTRATION_SUPERVISOR,REGISTRATION_ADMIN,PRE_REGISTRATION_ADMIN,INDIVIDUAL
mosip.role.prereg.putappointmentpreregistrationid=INDIVIDUAL,PRE_REGISTRATION_ADMIN
mosip.role.prereg.putbatchappointmentpreregistrationid=PRE_REGISTRATION_ADMIN,REGISTRATION_SUPERVISOR
mosip.role.prereg.deleteappointment=INDIVIDUAL,PRE_REGISTRATION_ADMIN
mosip.role.prereg.getappointmentpreregistrationidregistrationcenterid=INDIVIDUAL,REGISTRATION_OFFICER,REGISTRATION_SUPERVISOR,REGISTRATION_ADMIN
mosip.role.prereg.getappointmentregistrationcenterid=INDIVIDUAL,REGISTRATION_OFFICER,REGISTRATION_SUPERVISOR,REGISTRATION_ADMIN
